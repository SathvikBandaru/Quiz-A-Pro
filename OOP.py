      
class QA:
  def __init__(self, question, correctAnswer, otherAnswers):
    self.question = question
    self.corrAnsw = correctAnswer
    self.otherAnsw = otherAnswers

easy =  [ QA("Which is the fastest and most efficient language", "Machine level", ["Assembly level","High level","Artificial Intelligence"]),
          QA("What is the maximum possible length of an identifier?", "None of the mentioned", ["31 characters", "63 characters","79 characters"]),
          QA("Which of the following is invalid?", "None of the mentioned", ["_a = 1", "__a = 1","__str__ = 1"]),
          QA("Which of the following is an invalid variable?", "1st_string", ["my_string_1", "foo","_"]),
          QA("Which of the following is not a keyword?", "eval", ["assert", "nonlocal","pass"]),
          QA("All keywords in Python are in _________", "None of the mentioned", ["lower case", "UPPER CASE","Capitalized"]),
          QA("Which of the following is an invalid statement?", "a b c = 1000 2000 3000", ["abc = 1,000,000", "a,b,c = 1000, 2000, 3000","a_b_c = 1,000,000"]),
          QA("Which of the following cannot be a variable?", "in", ["__init__", "it","on"]),
          QA("Which of these in not a core data type?", "Class", ["List", "Dictionary","Tuple"]),
          QA("Given a function that does not return any value, What value is thrown by default when executed in shell?", "None", ["int", "bool","void"]),
          QA("In order to store values in terms of key and value we use what core data type?", "Dictionary", ["List", "Tuple","Class"]),
          QA("Which of the following results in a SyntaxError?", "‘3\’", [" ”’That’s okay”’", "‘”Once upon a time…”, she said.’","“He said, ‘Yes!'”"]),
          QA("Select the option that prints hello-how-are-you.", "print(‘hello-‘ + ‘how-are-you’)",
             ["print(‘hello’, ‘how’, ‘are’, ‘you’)", "print(‘hello’, ‘how’, ‘are’, ‘you’ + ‘-‘ * 4)","print(‘hello’ + ‘-‘ + ‘how’ + ‘-‘ + ‘are’ + ‘you’)"]),
          QA("Which is the correct operator for power(xy)?", "x**y", ["x^^y", "x^y","None of the mentioned"]),
          QA("Which one of these is floor division?", "//", ["/", "%","None of the mentioned"]),
          QA("What is the answer to this expression, 22 % 3 is?", "1", ["7", "0","5"]),
          QA("Which language holds data as apriority?", "Object Oriented", ["Monolithic","Structured","Logic oriented"]),
          QA("Operators with the same precedence are evaluated in which manner?", "Left to Right", ["Right to Left", "Can’t say","None of the mentioned"]),
          QA("What is the output of this expression, 3*1**3?", "3", ["1", "9","27"]),
          QA("Which one of the following has the same precedence level?", "Addition and Subtraction",
             ["Multiplication, Division and Addition", "Multiplication, Division, Addition and Subtraction","Addition and Multiplication"]),
          QA("You can use Python program for", "All of the mentioned", ["Application programming","Web programming","Scientific computing"]),
          QA("Which one of the following has the highest precedence in the expression?", "Parentheses", ["Exponential", "Addition","Multiplication"]),
          QA("What does ~4 evaluate to?", "-5", ["-4", "-3","+3"]),
          QA("What does ~~~~~~5 evaluate to?", "+5", ["+11", "-5","-11"]),
          QA("What is the result of cmp(3, 1)?", "1", ["0", "True","False"]),
          QA("Which of the following is incorrect?", "float(’12+34′)", ["float(’56’+’78’)", "float(‘inf’)","float(‘nan’)"]),
          QA("What does 3 ^ 4 evaluate to?", "7", ["81", "12","0.75"]),
          QA("Which are the advantages of functions in python?", "All of the mentioned", ["Reducing duplication of code",
             "Decomposing complex problems into simpler pieces","Improving clarity of the code"]),
          QA("What will be the value of the following Python expression? \n4+3%5", "7", ["4", "2","0"]),
          QA("Which of the following operators has its associativity from right to left?", "**", ["+", "//","%"]),
          QA("What will be the value of x in the following Python expression? \nx=int(43.55+2/2)", "44", ["43", "22","23"]),
          QA("The system software that creates the final executable file is", "Linker", ["Assembler","Compiler","Loader"]),
          QA("Evaluate the expression given below if A = 16 and B = 15. A % B//A", "0", ["0.0", "1","1.0"])]


moderate=[QA("What is the value of the following expression? \nFloat(22//3+3/3)", "8.0", ["8", "8.3","8.33"]),
          QA("What will be the output of the following Python code snippet if x=1? \nx<<2", "4", ["1", "2","8"]),
          QA("What will be the output of the following Python expression? \nbin(29)", "‘0b11101’", ["‘0b10111’", "‘0b11111’","‘0b11011’"]),
          QA("To find the decimal value of 1111, that is 15, we can use the function:", "int(‘1111’,2)", ["int(‘1111’,10)", " int(1111,10)"," int(1111,2)"]),
          QA("What will be the output of the following Python expression if x=15 and y=12? \nx & y", "12", ["1101", "b1101","0b1101"]),
          QA("What is the output of the following code\nprint(bool(0), bool(3.14159), bool(-3), bool(1.0+1j))", "False True True True",
             ["True True False True","True False False True","False True False True"]),
          QA("The one’s complement of 110010101 is:", "001101010", ["110010101", "001101011","110010100"]),
          QA("Bitwise _______ gives 1 if either of the bits is 1 and 0 when both of the bits are 1.", "XOR", ["OR", "AND","NOT"]),
          QA("Which of the following expressions can be used to multiply a given number ‘a’ by 4?", "a<<2", ["a>>2", "a>>4","a<<4"]),
          QA("What will be the output of the following Python statement? “a”+”bc”", "abc", ["a", "bc","bca"]),
          QA("What will be the output of the following Python statement?”abcd”[2:]", "cd", ["ba", "ab","dc"]),
          QA("What arithmetic operators cannot be used with strings?", "-", ["+", "*","All of the mentioned"]),
          QA("What will be the output of the following Python statement? \nprint(‘new’ ‘line’)", "newline",
             ["new line", "Error","Output equivalent to print ‘new\\nline’"]),
          QA("Given a string example=”hello” what is the output of example.count(‘l’)?", "2", ["1", "0","None"]),
          QA("To concatenate two strings to a third what statements are applicable?", "s3 = s1.__add__(s2)",
             ["s3 = s1 . s2", "s3 = s1.add(s2)","s3 = s1 * s2"]),
          QA("Which of the following commands will create a list?", "All of the mentioned", ["list1 = list()", "list1 = []","list1 = list([1, 2, 3])"]),
          QA("What is the output when we execute list(“hello”)?", "[‘h’, ‘e’, ‘l’, ‘l’, ‘o’]", ["[‘hello’]", "[‘llo’]","[‘olleh’]"]),
          QA("Suppose listExample is [‘h’,’e’,’l’,’l’,’o’], what is len(listExample)?", "5", ["4", "None","Error"]),
          QA("Suppose list1 is [2445,133,12454,123], what is max(list1)?", "12454", ["2445", "133","123"]),
          QA("Suppose list1 is [3, 5, 25, 1, 3], what is min(list1)?", "1", ["3", "5","25"]),
          QA("Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after list1.reverse()?", "[3, 1, 25, 5, 20, 5, 4, 3]",
             ["[3, 4, 5, 20, 5, 25, 1, 3]", "[1, 3, 3, 4, 5, 5, 20, 25]","[25, 20, 5, 5, 4, 3, 3, 1]"]),
          QA("Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.extend([34, 5])?", "[3, 4, 5, 20, 5, 25, 1, 3, 34, 5]",
             ["[1, 3, 3, 4, 5, 5, 20, 25, 34, 5]", "[25, 20, 5, 5, 4, 3, 3, 1, 34, 5]","[1, 3, 4, 5, 20, 5, 25, 3, 34, 5]"]),
          QA("Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop(1)?", "[3, 5, 20, 5, 25, 1, 3]",
             ["[3, 4, 5, 20, 5, 25, 1, 3]", "[1, 3, 3, 4, 5, 5, 20, 25]","[1, 3, 4, 5, 20, 5, 25]"]),
          QA("Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop()?", "[3, 4, 5, 20, 5, 25, 1]",
             ["[1, 3, 3, 4, 5, 5, 20, 25]", "[3, 5, 20, 5, 25, 1, 3]","[1, 3, 4, 5, 20, 5, 25]"]),
          QA("What will be the output of the following Python code?”Welcome to Python”.split()", "[“Welcome”, “to”, “Python”]",
             ["(“Welcome”, “to”, “Python”)", "{“Welcome”, “to”, “Python”}","“Welcome”, “to”, “Python”"]),
          QA("What will be the output of the following Python code? list(“a#b#c#d”.split(‘#’))", "[‘a’, ‘b’, ‘c’, ‘d’]",
             ["[‘a b c d’]", "[‘a#b#c#d’]","[‘abcd’]"]),
          QA("To which of the following the “in” operator can be used to check if an item is in it?", "All of the mentioned", ["List", "Set","Dictionary"]),       
          QA("What is setattr() used for? ", "To set an attribute",
             ["To delete an attribute", "To access the attribute of the object","To check if an attribute exists or not"]),
          QA("What is getattr() used for? ", "To access the attribute of the object",
             ["To delete an attribute", "To check if an attribute exists or not","To set an attribute"]),
          QA("What is Instantiation in terms of OOP terminology? ", "Creating an instance of class",
             ["Deleting an instance of class", "Modifying an instance of class","Copying an instance of class"]),
          QA("Which of the following is not a class method? ", "Non-static", ["Static", "Bounded","Unbounded"]),
          QA("Which of the following Python code creates an empty class?", "class A:\n\tpass",
             ["class A:\n\treturn", "class A:","It is not possible to create an empty class"]),
          QA("What are the methods which begin and end with two underscore characters called?", "Special methods",
             ["In-built methods", "User-defined methods","Additional methods"]),
          QA("What will be the output of the following Python code? \nfrom functools import reduce \nm=reduce(lambda x: x-3 in range(4, 10)) \nprint(list(m))",
             "Error",["[1, 2, 3, 4, 5, 6, 7]", "[1, 2, 3, 4, 5, 6]","No output"])]


tough =  [QA("What are the two main types of functions?", " Built-in function & User defined function", ["Custom function","User function","System function"]),
          QA("What is hasattr(obj,name) used for?", "To check if an attribute exists or not",
             ["To access the attribute of the object", "To delete an attribute","To set an attribute"]),
          QA("What will be the output of the following Python code?\nimport datetime\nd=datetime.date(2017,7,24)\nprint(d)", "2017-07-24",
             ["2017-7-24", "24-7-2017","Error"]),
          QA("What will be the output of the following Python code? ?\nimport datetime\nd=datetime.date(2016,07,18)\nprint(d)", "Error",
             ["2017-06-18", "18-06-2017","06-18-2017"]),
          QA("How many except statements can a try-except block have?", "More than zero", ["Zero", "One","More than one"]),
          QA("What is delattr(obj,name) used for?", "To delete an attribute",
             ["To print deleted attribute", "To set an attribute","To check if an attribute is deleted or not"]),
          QA("Where is function defined?", "All of the mentioned", ["Module","Class","Another function"]),
          QA("What does print(Test.__name__) display (assuming Test is the name of the class)? ", "Test", ["()", "Exception is thrown","__main__"]),
          QA("The static member functions", "Have access to only the static members of a class", ["Have access to all the members of a class",
                      "Have access to only constant members of a class","Have direct access to all other class members also"]),
          QA("What is type casting in python ?", "Change data type property", ["Declaration of data type", "Destroy data type","None of the above"]),
          QA("Which keyword should be used to declare the static member functions?", "static", ["stat", "const","common"]),
          QA("The static data member", "Can’t be mutable", ["Can be mutable", "Can’t be integer","Can’t be characters"]),
          QA("If static data member are made inline,", "Those can be initialized within the class", ["Those should be initialized outside the class",
                          "Those can’t be initialized with the class","Those can’t be used by class members"]),
          QA("Which of the following best describes inheritance?", "Ability of a class to derive members of another class as a part of its own definition",
             ["Means of bundling instance variables and methods in order to restrict access to certain class members",
              "Focuses on variables and passing of variables to functions",
              "Allows for implementation of elegant software that is well designed and easily modified"]),
          QA("Which of the following statements is wrong about inheritance? ", "Private members of a class can be inherited and accessed",
             ["Protected members of a class can be inherited", "The inheriting class is called a subclass","Inheritance is one of the features of OOP"]),
          QA("What is called when a function is defined inside a class?", "Method", ["Module","Class","Another function"]),
          QA("Which of the following data structures is returned by the functions globals() and locals()?", "Dictionary", ["List","Set","Tuple"]),
          QA("Suppose B is a subclass of A, to invoke the __init__ method in A from B, what is the line of code you should write?", "A.__init__(self)",
             ["B.__init__(self)", "A.__init__(B)","B.__init__(A)"]),
          QA("What is the process of defining two or more methods within same class that have same name but different parameters declaration?",
             "method overloading", ["method overriding", "method hiding","none of the mentioned"]),
          QA("Which function overloads the + operator?", "__add__()", ["__plus__()", "__sum__()","None of the mentioned"]),
          QA("Which operator is overloaded by __invert__()?", "~", ["!", "^","-"]),
          QA("Which function overloads the == operator?", "__eq__()", ["__equ__()", "__isequal__()","None of the mentioned"]),
          QA("Let A and B be objects of class Foo. Which functions are called when print(A + B) is executed?", " __add__(), __str__()",
             ["__str__(), __add__()", "__sum__(), __str__()"," __str__(), __sum__()"]),
          QA("Which operator is overloaded by the __or__() function?", "|", ["||", "/","//"]),
          QA("Which function overloads the // operator?", "__floordiv__()", ["__div__()", "__ceildiv__()","__truediv__()"]),
          QA("Which of the following statements are false regarding the opening modes of a file?",
             "When you open a file for writing, if the file does not exist, an error occurs.",
             ["When you open a file for reading, if the file does not exist, an error occurs.",
              "When you open a file for writing, if the file exists, the existing file is overwritten with the new file.",
              "When you open a file for writing, if the file does not exist, a new file is created."]),
          QA("Which of the following commands can be used to read “n” number of characters from a file using the file object <file>?",
             "file.read(n)", ["n = file.read()", "file.readline(n)","file.readlines()"]),
          QA("Which of the following commands can be used to read the entire contents of a file as a string using the file object <tmpfile>?",
             "tmpfile.read()", ["tmpfile.read(n)", "tmpfile.readline()","tmpfile.readlines()"]),
          QA("Which of the following commands can be used to read the next line in a file using the file object <tmpfile>?",
             "tmpfile.readline()", ["tmpfile.readlines()", "tmpfile.read()","tmpfile.read(n)"]),
          QA("Which module in Python supports regular expressions?", "re", ["regex", "pyregex","None of the mentioned"]),
          QA("Which of the following creates a pattern object?", "re.compile(str)", ["re.create(str)", "re.regex(str)","re.assemble(str)"]),
          QA("What does the function re.match do?", "Matches a pattern at the start of the string", ["Matches a pattern at any position in the string",
                        "Such a function does not exist","None of the mentioned"]),
          QA("What does the function re.search do? ", "Matches a pattern at any position in the string", ["None of the mentioned",
                                  "Matches a pattern at the start of the string","Such a function does not exist"])]




